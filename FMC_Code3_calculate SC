{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1A0AfG9QjhgS7s2N-fpU6DS_OUmjTfiam","timestamp":1748956927834}],"gpuType":"V6E1","authorship_tag":"ABX9TyM1ZWt+nL8xgwYFtPjVgtny"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"TPU"},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T66oAMFgJnLY","executionInfo":{"status":"ok","timestamp":1748968516548,"user_tz":-480,"elapsed":15386,"user":{"displayName":"JIEUN LEE","userId":"02287882068179401694"}},"outputId":"e1a7d960-7048-4544-95fc-12e80e07b393"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["# Setting to use a GPU\n","gpu_info = !nvidia-smi\n","gpu_info = '\\n'.join(gpu_info)\n","if gpu_info.find('failed') >= 0:\n","  print('Not connected to a GPU')\n","else:\n","  print(gpu_info)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LoYnWd9Sq7Bf","executionInfo":{"status":"ok","timestamp":1748968517805,"user_tz":-480,"elapsed":118,"user":{"displayName":"JIEUN LEE","userId":"02287882068179401694"}},"outputId":"c064afb3-db0f-4849-9026-b863aaed875d"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["/bin/bash: line 1: nvidia-smi: command not found\n"]}]},{"cell_type":"code","source":["# Setting to Use a High-RAM\n","from psutil import virtual_memory\n","ram_gb = virtual_memory().total / 1e9\n","print('Your runtime has {:.1f} gigabytes of available RAM\\n'.format(ram_gb))\n","\n","if ram_gb < 20:\n","  print('Not using a high-RAM runtime')\n","else:\n","  print('You are using a high-RAM runtime!')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"m98DMQsYsnEl","executionInfo":{"status":"ok","timestamp":1748968518977,"user_tz":-480,"elapsed":14,"user":{"displayName":"JIEUN LEE","userId":"02287882068179401694"}},"outputId":"24a7e49d-54f1-40b1-9a52-dcc974ba2a7a"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Your runtime has 185.7 gigabytes of available RAM\n","\n","You are using a high-RAM runtime!\n"]}]},{"cell_type":"markdown","source":["# Calculate PE"],"metadata":{"id":"aFVB_vVa4XZ5"}},{"cell_type":"code","source":["#@title SC1: nonworking(24567) SC(Seoul) (i != j)\n","import pandas as pd\n","import os\n","\n","folder = '/content/drive/MyDrive/FMC_Data/M-B_data_by_purpose_domestic_residents'\n","files = [\n","    'purpose_2_with_OD_indicators.csv',\n","    'purpose_4_with_OD_indicators.csv',\n","    'purpose_5_with_OD_indicators.csv',\n","    'purpose_6_with_OD_indicators.csv',\n","    'purpose_7_with_OD_indicators.csv'\n","]\n","\n","# Combine files\n","dfs = [pd.read_csv(os.path.join(folder, f)) for f in files]\n","df = pd.concat(dfs, ignore_index=True)\n","\n","# Filter for O_Seoul==1, D_Seoul==1, and O_ADMDONG_CD != D_ADMDONG_CD\n","df_seoul = df[\n","    (df['O_Seoul'] == 1) &\n","    (df['D_Seoul'] == 1) &\n","    (df['O_ADMDONG_CD'] != df['D_ADMDONG_CD'])\n","]\n","\n","# Total count for denominator\n","total_cnt = df_seoul['CNT'].sum()\n","\n","# Numerator: sum of CNT by D_ADMDONG_CD\n","numerator = df_seoul.groupby('D_ADMDONG_CD')['CNT'].sum()\n","\n","# Calculate Pull Effect as percentage\n","pe_df = numerator.reset_index().rename(columns={'CNT': 'Numerator_CNT'})\n","pe_df['PE_Seoul'] = (pe_df['Numerator_CNT'] / total_cnt) * 100\n","\n","# rename the PE column (Because we have different versions of PE)\n","pe_df = pe_df.rename(columns={'PE_Seoul': 'PE1_Seoul'})\n","# Save result (optional)\n","pe_df.to_csv(os.path.join(folder, 'PE1_within_Seoul_to_Seoul_24567_btw_notsameOD.csv'), index=False)"],"metadata":{"id":"0Ft03ThSIiYT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pe_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"iRZoKcLTKmqa","executionInfo":{"status":"ok","timestamp":1748943805490,"user_tz":-480,"elapsed":27,"user":{"displayName":"JIEUN LEE","userId":"02287882068179401694"}},"outputId":"5cb8852b-e4b9-4dad-8e07-571cd55b50f6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   D_ADMDONG_CD  Numerator_CNT  PE1_Seoul\n","0      11110515      491795.64   0.287584\n","1      11110530      956442.11   0.559293\n","2      11110540      289237.61   0.169136\n","3      11110550      259564.64   0.151784\n","4      11110560      242881.49   0.142028"],"text/html":["\n","  <div id=\"df-7e19b9c0-17cf-4c9d-abc4-2a9296d27c9e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>D_ADMDONG_CD</th>\n","      <th>Numerator_CNT</th>\n","      <th>PE1_Seoul</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>11110515</td>\n","      <td>491795.64</td>\n","      <td>0.287584</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>11110530</td>\n","      <td>956442.11</td>\n","      <td>0.559293</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>11110540</td>\n","      <td>289237.61</td>\n","      <td>0.169136</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>11110550</td>\n","      <td>259564.64</td>\n","      <td>0.151784</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>11110560</td>\n","      <td>242881.49</td>\n","      <td>0.142028</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7e19b9c0-17cf-4c9d-abc4-2a9296d27c9e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7e19b9c0-17cf-4c9d-abc4-2a9296d27c9e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7e19b9c0-17cf-4c9d-abc4-2a9296d27c9e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ceafafb3-2ede-4899-aa0b-e52212e81188\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ceafafb3-2ede-4899-aa0b-e52212e81188')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ceafafb3-2ede-4899-aa0b-e52212e81188 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"pe_df","summary":"{\n  \"name\": \"pe_df\",\n  \"rows\": 426,\n  \"fields\": [\n    {\n      \"column\": \"D_ADMDONG_CD\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 192077,\n        \"min\": 11110515,\n        \"max\": 11740700,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          11740610,\n          11215840,\n          11380510\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Numerator_CNT\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 356344.763389745,\n        \"min\": 48672.01,\n        \"max\": 2773949.1,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          716962.37,\n          590042.38,\n          407720.44\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE1_Seoul\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.20837766359784707,\n        \"min\": 0.028461649414834426,\n        \"max\": 1.6221061505122858,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.41925393298055297,\n          0.3450356654564813,\n          0.23842032047869063\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["# check the sum of PE1_Seoul\n","print(pe_df['PE1_Seoul'].sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6A7lRjcDLLCV","executionInfo":{"status":"ok","timestamp":1748943837564,"user_tz":-480,"elapsed":14,"user":{"displayName":"JIEUN LEE","userId":"02287882068179401694"}},"outputId":"545d2242-2994-4ab6-a39f-02c2c426c699"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["100.0000000000002\n"]}]},{"cell_type":"code","source":["#@title PE2: nonworking(24567) PE(Korea) (i != j)\n","import pandas as pd\n","import os\n","\n","folder = '/content/drive/MyDrive/FMC_Data/M-B_data_by_purpose_domestic_residents'\n","files = [\n","    'purpose_2_with_OD_indicators.csv',\n","    'purpose_4_with_OD_indicators.csv',\n","    'purpose_5_with_OD_indicators.csv',\n","    'purpose_6_with_OD_indicators.csv',\n","    'purpose_7_with_OD_indicators.csv'\n","]\n","\n","# Combine files\n","dfs = [pd.read_csv(os.path.join(folder, f)) for f in files]\n","df = pd.concat(dfs, ignore_index=True)\n","\n","# Filter for D_Seoul==1, and O_ADMDONG_CD != D_ADMDONG_CD\n","df_all_to_seoul = df[\n","    (df['D_Seoul'] == 1) &\n","    (df['O_ADMDONG_CD'] != df['D_ADMDONG_CD'])\n","]\n","\n","# Total count for denominator\n","total_cnt_PE2 = df_all_to_seoul['CNT'].sum()\n","\n","# Numerator: sum of CNT by D_ADMDONG_CD\n","numerator_PE2 = df_all_to_seoul.groupby('D_ADMDONG_CD')['CNT'].sum()\n","\n","# Calculate Pull Effect as percentage\n","pe2_df = numerator_PE2.reset_index().rename(columns={'CNT': 'Numerator_PE2_CNT'})\n","pe2_df['PE_all_to_seoul'] = (pe2_df['Numerator_PE2_CNT'] / total_cnt_PE2) * 100\n","\n","# rename the PE column (Because we have different versions of PE)\n","pe2_df = pe2_df.rename(columns={'PE_all_to_seoul': 'PE2_all_to_seoul'})\n","# Save result (optional)\n","pe2_df.to_csv(os.path.join(folder, 'PE2_all_to_seoul_24567_btw_notsameOD.csv'), index=False)"],"metadata":{"id":"j0zwAeuYLgqA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pe2_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"ONlERsgluDzD","executionInfo":{"status":"ok","timestamp":1748953411049,"user_tz":-480,"elapsed":24,"user":{"displayName":"JIEUN LEE","userId":"02287882068179401694"}},"outputId":"2ca45269-c641-4d20-d076-226812431268"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   D_ADMDONG_CD  Numerator_PE2_CNT  PE2_all_to_seoul\n","0      11110515          633332.29          0.296431\n","1      11110530         1166778.97          0.546111\n","2      11110540          348188.63          0.162970\n","3      11110550          317238.05          0.148483\n","4      11110560          299902.76          0.140370"],"text/html":["\n","  <div id=\"df-6a531848-c941-4f63-9315-f6ddac60c95a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>D_ADMDONG_CD</th>\n","      <th>Numerator_PE2_CNT</th>\n","      <th>PE2_all_to_seoul</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>11110515</td>\n","      <td>633332.29</td>\n","      <td>0.296431</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>11110530</td>\n","      <td>1166778.97</td>\n","      <td>0.546111</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>11110540</td>\n","      <td>348188.63</td>\n","      <td>0.162970</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>11110550</td>\n","      <td>317238.05</td>\n","      <td>0.148483</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>11110560</td>\n","      <td>299902.76</td>\n","      <td>0.140370</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6a531848-c941-4f63-9315-f6ddac60c95a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6a531848-c941-4f63-9315-f6ddac60c95a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6a531848-c941-4f63-9315-f6ddac60c95a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-43089495-e3b7-49bc-9537-2232e3f7adf4\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-43089495-e3b7-49bc-9537-2232e3f7adf4')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-43089495-e3b7-49bc-9537-2232e3f7adf4 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"pe2_df","summary":"{\n  \"name\": \"pe2_df\",\n  \"rows\": 426,\n  \"fields\": [\n    {\n      \"column\": \"D_ADMDONG_CD\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 192077,\n        \"min\": 11110515,\n        \"max\": 11740700,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          11740610,\n          11215840,\n          11380510\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Numerator_PE2_CNT\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 468471.8763113807,\n        \"min\": 55616.02,\n        \"max\": 3567143.4,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          886329.05,\n          683460.4,\n          481818.19\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE2_all_to_seoul\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2192684368180186,\n        \"min\": 0.026031098949756547,\n        \"max\": 1.669602801735381,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.4148466431541437,\n          0.3198938956912089,\n          0.22551518392870618\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# check the sum of PE2_Seoul\n","print(pe2_df['PE2_all_to_seoul'].sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cfT0OJ9ruDn3","executionInfo":{"status":"ok","timestamp":1748953471160,"user_tz":-480,"elapsed":8,"user":{"displayName":"JIEUN LEE","userId":"02287882068179401694"}},"outputId":"c1b9c8a9-870b-432d-ed42-01aa49c9771c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["99.99999999999984\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"yTw3b6ixwDo9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#@title PE3: nonworking(24567) PE(Seoul) (including i=j)\n","import pandas as pd\n","import os\n","\n","folder = '/content/drive/MyDrive/FMC_Data/M-B_data_by_purpose_domestic_residents'\n","files = [\n","    'purpose_2_with_OD_indicators.csv',\n","    'purpose_4_with_OD_indicators.csv',\n","    'purpose_5_with_OD_indicators.csv',\n","    'purpose_6_with_OD_indicators.csv',\n","    'purpose_7_with_OD_indicators.csv'\n","]\n","\n","# Combine files\n","dfs = [pd.read_csv(os.path.join(folder, f)) for f in files]\n","df = pd.concat(dfs, ignore_index=True)\n","\n","# Filter for O_Seoul==1, D_Seoul==1\n","df_seoul = df[\n","    (df['O_Seoul'] == 1) & (df['D_Seoul'] == 1)\n","]\n","\n","# Total count for denominator\n","total_cnt_PE3 = df_seoul['CNT'].sum()\n","\n","# Numerator: sum of CNT by D_ADMDONG_CD\n","numerator_PE3 = df_seoul.groupby('D_ADMDONG_CD')['CNT'].sum()\n","\n","# Calculate Pull Effect as percentage\n","pe3_df = numerator_PE3.reset_index().rename(columns={'CNT': 'Numerator_PE3_CNT'})\n","pe3_df['PE_Seoul'] = (pe3_df['Numerator_PE3_CNT'] / total_cnt_PE3) * 100\n","\n","# rename the PE column (Because we have different versions of PE)\n","pe3_df = pe3_df.rename(columns={'PE_Seoul': 'PE3_Seoul'})\n","# Save result (optional)\n","pe3_df.to_csv(os.path.join(folder, 'PE3_within_Seoul_to_Seoul_24567_including_all_OD.csv'), index=False)"],"metadata":{"id":"lc2EnMc9xNmR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# check the sum of PE2_Seoul\n","print(pe3_df['PE3_Seoul'].sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"szQKdQduxT2U","executionInfo":{"status":"ok","timestamp":1748954373999,"user_tz":-480,"elapsed":7,"user":{"displayName":"JIEUN LEE","userId":"02287882068179401694"}},"outputId":"61455976-4796-4981-f8b6-04205b98181d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["99.99999999999983\n"]}]},{"cell_type":"code","source":["#@title PE4: nonworking(24567) PE(Korea) (including i=j)\n","import pandas as pd\n","import os\n","\n","folder = '/content/drive/MyDrive/FMC_Data/M-B_data_by_purpose_domestic_residents'\n","files = [\n","    'purpose_2_with_OD_indicators.csv',\n","    'purpose_4_with_OD_indicators.csv',\n","    'purpose_5_with_OD_indicators.csv',\n","    'purpose_6_with_OD_indicators.csv',\n","    'purpose_7_with_OD_indicators.csv'\n","]\n","\n","# Combine files\n","dfs = [pd.read_csv(os.path.join(folder, f)) for f in files]\n","df = pd.concat(dfs, ignore_index=True)\n","\n","# Filter for D_Seoul==1\n","df_seoul = df[(df['D_Seoul'] == 1)]\n","\n","# Total count for denominator\n","total_cnt_PE4 = df_seoul['CNT'].sum()\n","\n","# Numerator: sum of CNT by D_ADMDONG_CD\n","numerator_PE4 = df_seoul.groupby('D_ADMDONG_CD')['CNT'].sum()\n","\n","# Calculate Pull Effect as percentage\n","pe4_df = numerator_PE4.reset_index().rename(columns={'CNT': 'Numerator_PE4_CNT'})\n","pe4_df['PE_Seoul'] = (pe4_df['Numerator_PE4_CNT'] / total_cnt_PE4) * 100\n","\n","# rename the PE column (Because we have different versions of PE)\n","pe4_df = pe4_df.rename(columns={'PE_Seoul': 'PE4_Seoul'})\n","# Save result (optional)\n","pe4_df.to_csv(os.path.join(folder, 'PE4_All_to_Seoul_24567_including_all_OD.csv'), index=False)"],"metadata":{"id":"oAZbYiNpxTo2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# check the sum of PE4_Seoul\n","print(pe4_df['PE4_Seoul'].sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GqyluBktywOn","executionInfo":{"status":"ok","timestamp":1748954469687,"user_tz":-480,"elapsed":15,"user":{"displayName":"JIEUN LEE","userId":"02287882068179401694"}},"outputId":"18e57c28-1c0c-4d2e-93f0-58f273257bb8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["99.99999999999994\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"9x-4alnrznN8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#@title PE5: working trip(1) PE(Seoul) (i!=j)\n","import pandas as pd\n","import os\n","\n","folder = '/content/drive/MyDrive/FMC_Data/M-B_data_by_purpose_domestic_residents'\n","files = ['purpose_1_with_OD_indicators.csv']\n","\n","# Combine files\n","dfs = [pd.read_csv(os.path.join(folder, f)) for f in files]\n","df = pd.concat(dfs, ignore_index=True)\n","\n","# Filter for O_Seoul==1, D_Seoul==1, and O_ADMDONG_CD != D_ADMDONG_CD\n","df_seoul = df[\n","    (df['O_Seoul'] == 1) &\n","    (df['D_Seoul'] == 1) &\n","    (df['O_ADMDONG_CD'] != df['D_ADMDONG_CD'])\n","]\n","\n","# Total count for denominator\n","total_cnt = df_seoul['CNT'].sum()\n","\n","# Numerator: sum of CNT by D_ADMDONG_CD\n","numerator = df_seoul.groupby('D_ADMDONG_CD')['CNT'].sum()\n","\n","# Calculate Pull Effect as percentage\n","pe_df = numerator.reset_index().rename(columns={'CNT': 'Numerator_CNT'})\n","pe_df['PE_Seoul'] = (pe_df['Numerator_CNT'] / total_cnt) * 100\n","\n","# rename the PE column (Because we have different versions of PE)\n","pe_df = pe_df.rename(columns={'PE_Seoul': 'PE5_Seoul'})\n","# Save result (optional)\n","pe_df.to_csv(os.path.join(folder, 'PE5_within_Seoul_to_Seoul_1working_btw_notsameOD.csv'), index=False)"],"metadata":{"id":"YEFsjZQ-0N2O"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# check the sum of PE5_Seoul\n","print(pe_df['PE5_Seoul'].sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9vliQptF2QZD","executionInfo":{"status":"ok","timestamp":1748955124824,"user_tz":-480,"elapsed":9,"user":{"displayName":"JIEUN LEE","userId":"02287882068179401694"}},"outputId":"525f8d26-afc3-4da6-a9b6-17a4345960dc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["99.99999999999996\n"]}]},{"cell_type":"code","source":["#@title PE6: working trip(1) PE(Korea) (i!=j)\n","import pandas as pd\n","import os\n","\n","folder = '/content/drive/MyDrive/FMC_Data/M-B_data_by_purpose_domestic_residents'\n","files = ['purpose_1_with_OD_indicators.csv']\n","\n","# Combine files\n","dfs = [pd.read_csv(os.path.join(folder, f)) for f in files]\n","df = pd.concat(dfs, ignore_index=True)\n","\n","# Filter for D_Seoul==1, and O_ADMDONG_CD != D_ADMDONG_CD\n","df_seoul = df[\n","    (df['D_Seoul'] == 1) &\n","    (df['O_ADMDONG_CD'] != df['D_ADMDONG_CD'])\n","]\n","\n","# Total count for denominator\n","total_cnt = df_seoul['CNT'].sum()\n","\n","# Numerator: sum of CNT by D_ADMDONG_CD\n","numerator = df_seoul.groupby('D_ADMDONG_CD')['CNT'].sum()\n","\n","# Calculate Pull Effect as percentage\n","pe_df = numerator.reset_index().rename(columns={'CNT': 'Numerator_CNT'})\n","pe_df['PE_Seoul'] = (pe_df['Numerator_CNT'] / total_cnt) * 100\n","\n","# rename the PE column (Because we have different versions of PE)\n","pe_df = pe_df.rename(columns={'PE_Seoul': 'PE6_Seoul'})\n","# Save result (optional)\n","pe_df.to_csv(os.path.join(folder, 'PE6_all_to_Seoul_1working_btw_notsameOD.csv'), index=False)"],"metadata":{"id":"9BBapHl703IK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# check the sum of PE6_Seoul\n","print(pe_df['PE6_Seoul'].sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dRFiO0Pz2wXA","executionInfo":{"status":"ok","timestamp":1748955253347,"user_tz":-480,"elapsed":44,"user":{"displayName":"JIEUN LEE","userId":"02287882068179401694"}},"outputId":"ecfbfa6e-49a8-4f95-ed12-f20bfccf830e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["99.99999999999996\n"]}]},{"cell_type":"code","source":["#@title PE7: working trip(1) PE(Seoul to Seoul) (including i=j)\n","import pandas as pd\n","import os\n","\n","folder = '/content/drive/MyDrive/FMC_Data/M-B_data_by_purpose_domestic_residents'\n","files = ['purpose_1_with_OD_indicators.csv']\n","\n","# Combine files\n","dfs = [pd.read_csv(os.path.join(folder, f)) for f in files]\n","df = pd.concat(dfs, ignore_index=True)\n","\n","# Filter for O_Seoul == 1 & D_Seoul==1\n","df_seoul = df[\n","    (df['O_Seoul'] == 1) &\n","    (df['D_Seoul'] == 1)\n","]\n","\n","# Total count for denominator\n","total_cnt = df_seoul['CNT'].sum()\n","\n","# Numerator: sum of CNT by D_ADMDONG_CD\n","numerator = df_seoul.groupby('D_ADMDONG_CD')['CNT'].sum()\n","\n","# Calculate Pull Effect as percentage\n","pe_df = numerator.reset_index().rename(columns={'CNT': 'Numerator_CNT'})\n","pe_df['PE_Seoul'] = (pe_df['Numerator_CNT'] / total_cnt) * 100\n","\n","# rename the PE column (Because we have different versions of PE)\n","pe_df = pe_df.rename(columns={'PE_Seoul': 'PE7_Seoul'})\n","# Save result (optional)\n","pe_df.to_csv(os.path.join(folder, 'PE7_Seoul_to_Seoul_1working_btw_allOD.csv'), index=False)"],"metadata":{"id":"XbWEHG_Y07sL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# check the sum of PE7_Seoul\n","print(pe_df['PE7_Seoul'].sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uAY4FROp29wi","executionInfo":{"status":"ok","timestamp":1748955297646,"user_tz":-480,"elapsed":6,"user":{"displayName":"JIEUN LEE","userId":"02287882068179401694"}},"outputId":"74ab6559-cafb-449f-882c-47a167f480fb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["100.0\n"]}]},{"cell_type":"code","source":["#@title PE8: working trip(1) PE(Korea to Seoul) (including i=j)\n","import pandas as pd\n","import os\n","\n","folder = '/content/drive/MyDrive/FMC_Data/M-B_data_by_purpose_domestic_residents'\n","files = ['purpose_1_with_OD_indicators.csv']\n","\n","# Combine files\n","dfs = [pd.read_csv(os.path.join(folder, f)) for f in files]\n","df = pd.concat(dfs, ignore_index=True)\n","\n","# Filter for D_Seoul==1\n","df_seoul = df[\n","    (df['D_Seoul'] == 1)\n","]\n","\n","# Total count for denominator\n","total_cnt = df_seoul['CNT'].sum()\n","\n","# Numerator: sum of CNT by D_ADMDONG_CD\n","numerator = df_seoul.groupby('D_ADMDONG_CD')['CNT'].sum()\n","\n","# Calculate Pull Effect as percentage\n","pe_df = numerator.reset_index().rename(columns={'CNT': 'Numerator_CNT'})\n","pe_df['PE_Seoul'] = (pe_df['Numerator_CNT'] / total_cnt) * 100\n","\n","# rename the PE column (Because we have different versions of PE)\n","pe_df = pe_df.rename(columns={'PE_Seoul': 'PE8_Seoul'})\n","# Save result (optional)\n","pe_df.to_csv(os.path.join(folder, 'PE8_Seoul_to_Seoul_1working_btw_allOD.csv'), index=False)\n"],"metadata":{"id":"wNU5mQt1089K"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# check the sum of PE7_Seoul\n","print(pe_df['PE8_Seoul'].sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"N4n-_oVC3KZe","executionInfo":{"status":"ok","timestamp":1748955369654,"user_tz":-480,"elapsed":8,"user":{"displayName":"JIEUN LEE","userId":"02287882068179401694"}},"outputId":"2d2c1a58-23dd-473e-861d-a843ac502303"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["100.00000000000007\n"]}]},{"cell_type":"markdown","source":["# Caculate SC"],"metadata":{"id":"isQxVVI28zmG"}},{"cell_type":"code","source":["#@title SC1: nonworking(24567) SC(Seoul)\n","\n","import pandas as pd\n","import os\n","\n","folder = '/content/drive/MyDrive/FMC_Data/M-B_data_by_purpose_domestic_residents'\n","files = [\n","    'purpose_2_with_OD_indicators.csv',\n","    'purpose_4_with_OD_indicators.csv',\n","    'purpose_5_with_OD_indicators.csv',\n","    'purpose_6_with_OD_indicators.csv',\n","    'purpose_7_with_OD_indicators.csv'\n","]\n","\n","# Combine files\n","dfs = [pd.read_csv(os.path.join(folder, f)) for f in files]\n","df = pd.concat(dfs, ignore_index=True)\n","\n","# Only keep Seoul-to-Seoul trips\n","df_seoul = df[(df['O_Seoul']==1) & (df['D_Seoul']==1)]\n","\n","# Numerator: trips within the same dong (O_ADMDONG_CD == D_ADMDONG_CD)\n","numerator = df_seoul[df_seoul['O_ADMDONG_CD'] == df_seoul['D_ADMDONG_CD']]\n","numerator_sum = numerator.groupby('O_ADMDONG_CD')['CNT'].sum().rename('Within_Same_Dong')\n","\n","# Denominator: all trips originated from each dong\n","denominator_sum = df_seoul.groupby('O_ADMDONG_CD')['CNT'].sum().rename('Total_Origin_Trips')\n","\n","# Combine and calculate SC\n","sc_df = pd.concat([numerator_sum, denominator_sum], axis=1).fillna(0)\n","sc_df['SC1'] = 100 * sc_df['Within_Same_Dong'] / sc_df['Total_Origin_Trips']\n","\n","# Reset index for convenience\n","sc_df = sc_df.reset_index().rename(columns={'O_ADMDONG_CD': 'ADMDONG_CD'})\n","\n","# Save or display\n","sc_df.to_csv(os.path.join(folder, 'SC1_by_dong_in_Seoul.csv'), index=False)\n","print(sc_df.head())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mKvWOJzioojO","executionInfo":{"status":"ok","timestamp":1748970251968,"user_tz":-480,"elapsed":83527,"user":{"displayName":"JIEUN LEE","userId":"02287882068179401694"}},"outputId":"e462d9c1-7420-4ff0-a075-6d2fd0299386"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["   ADMDONG_CD  Within_Same_Dong  Total_Origin_Trips        SC1\n","0    11110515         116463.51           555428.52  20.968226\n","1    11110530         133253.79           893634.79  14.911437\n","2    11110540          20419.48           246316.02   8.289952\n","3    11110550          66402.18           316731.28  20.964832\n","4    11110560          83669.49           412945.07  20.261651\n"]}]},{"cell_type":"code","source":["# check the statistics of SC1_Seoul\n","print(sc_df['SC1'].max())\n","print(sc_df['SC1'].mean())\n","print(sc_df['SC1'].min())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VNrtY1YYp6_t","executionInfo":{"status":"ok","timestamp":1748970251981,"user_tz":-480,"elapsed":16,"user":{"displayName":"JIEUN LEE","userId":"02287882068179401694"}},"outputId":"b72a347f-b531-42e6-c151-41f302625831"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["53.68455148786344\n","18.438552671812435\n","2.397867661480869\n"]}]},{"cell_type":"code","source":["#@title SC2: working(1) SC(Seoul)\n","\n","import pandas as pd\n","import os\n","\n","folder = '/content/drive/MyDrive/FMC_Data/M-B_data_by_purpose_domestic_residents'\n","files = ['purpose_1_with_OD_indicators.csv']\n","\n","# Combine files\n","dfs = [pd.read_csv(os.path.join(folder, f)) for f in files]\n","df = pd.concat(dfs, ignore_index=True)\n","\n","# Only keep Seoul-to-Seoul trips\n","df_seoul = df[(df['O_Seoul']==1) & (df['D_Seoul']==1)]\n","\n","# Numerator: trips within the same dong (O_ADMDONG_CD == D_ADMDONG_CD)\n","numerator = df_seoul[df_seoul['O_ADMDONG_CD'] == df_seoul['D_ADMDONG_CD']]\n","numerator_sum = numerator.groupby('O_ADMDONG_CD')['CNT'].sum().rename('Within_Same_Dong')\n","\n","# Denominator: all trips originated from each dong\n","denominator_sum = df_seoul.groupby('O_ADMDONG_CD')['CNT'].sum().rename('Total_Origin_Trips')\n","\n","# Combine and calculate SC\n","sc_df = pd.concat([numerator_sum, denominator_sum], axis=1).fillna(0)\n","sc_df['SC2'] = 100 * sc_df['Within_Same_Dong'] / sc_df['Total_Origin_Trips']\n","\n","# Reset index for convenience\n","sc_df = sc_df.reset_index().rename(columns={'O_ADMDONG_CD': 'ADMDONG_CD'})\n","\n","# Save or display\n","sc_df.to_csv(os.path.join(folder, 'SC2_workingtrip_by_dong_in_Seoul.csv'), index=False)\n","print(sc_df.head())\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rux_S8T_qU5r","executionInfo":{"status":"ok","timestamp":1748970112973,"user_tz":-480,"elapsed":29279,"user":{"displayName":"JIEUN LEE","userId":"02287882068179401694"}},"outputId":"654413ea-f168-43e8-87ae-58971d1908ba"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["   ADMDONG_CD  Within_Same_Dong  Total_Origin_Trips        SC2\n","0    11110515          10633.28            85321.48  12.462606\n","1    11110530          25451.98           104351.09  24.390718\n","2    11110540           2012.13            19947.18  10.087291\n","3    11110550           6121.73            62601.21   9.778932\n","4    11110560          10966.20           105050.29  10.439000\n"]}]},{"cell_type":"code","source":["# check the statistics of SC1_Seoul\n","print(sc_df['SC2'].max())\n","print(sc_df['SC2'].mean())\n","print(sc_df['SC2'].min())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WagBHEJtq6NK","executionInfo":{"status":"ok","timestamp":1748970161204,"user_tz":-480,"elapsed":10,"user":{"displayName":"JIEUN LEE","userId":"02287882068179401694"}},"outputId":"dab37630-9b15-478a-c00d-4aa53d24b83f"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["45.02318769697686\n","10.90968412363914\n","2.5111332111322593\n"]}]},{"cell_type":"code","source":["#@title combine PE and SC variables\n","\n","import pandas as pd\n","import os\n","\n","folder = '/content/drive/MyDrive/FMC_Data/M-B_data_by_purpose_domestic_residents'\n","\n","# Each entry: (filename, code_column, index_column)\n","index_files = [\n","    ('PE1_within_Seoul_to_Seoul_24567_btw_notsameOD.csv', 'D_ADMDONG_CD', 'PE1_Seoul'),\n","    ('PE2_all_to_seoul_24567_btw_notsameOD.csv', 'D_ADMDONG_CD', 'PE2_all_to_seoul'),\n","    ('PE3_within_Seoul_to_Seoul_24567_including_all_OD.csv', 'D_ADMDONG_CD', 'PE3_Seoul'),\n","    ('PE4_All_to_Seoul_24567_including_all_OD.csv', 'D_ADMDONG_CD', 'PE4_Seoul'),\n","    ('PE5_within_Seoul_to_Seoul_1working_btw_notsameOD.csv', 'D_ADMDONG_CD', 'PE5_Seoul'),\n","    ('PE6_all_to_Seoul_1working_btw_notsameOD.csv', 'D_ADMDONG_CD', 'PE6_Seoul'),\n","    ('PE7_Seoul_to_Seoul_1working_btw_allOD.csv', 'D_ADMDONG_CD', 'PE7_Seoul'),\n","    ('PE8_Seoul_to_Seoul_1working_btw_allOD.csv', 'D_ADMDONG_CD', 'PE8_Seoul'),\n","    ('SC1_by_dong_in_Seoul.csv', 'ADMDONG_CD', 'SC1'),\n","    ('SC2_workingtrip_by_dong_in_Seoul.csv', 'ADMDONG_CD', 'SC2')\n","]\n","\n","# Read and prepare each DataFrame\n","dfs = []\n","for fname, code_col, index_col in index_files:\n","    path = os.path.join(folder, fname)\n","    df = pd.read_csv(path, usecols=[code_col, index_col])\n","    df = df.rename(columns={code_col: 'ADMDONG_CD', index_col: index_col})  # standardize key name\n","    dfs.append(df)\n","\n","# Merge all on 'ADMDONG_CD'\n","from functools import reduce\n","combined_df = reduce(lambda left, right: pd.merge(left, right, on='ADMDONG_CD', how='outer'), dfs)\n","combined_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"wt5JimZ3rIAZ","executionInfo":{"status":"ok","timestamp":1748970282876,"user_tz":-480,"elapsed":2460,"user":{"displayName":"JIEUN LEE","userId":"02287882068179401694"}},"outputId":"b541b838-3630-44de-e103-03ae58cd80bd"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     ADMDONG_CD  PE1_Seoul  PE2_all_to_seoul  PE3_Seoul  PE4_Seoul  PE5_Seoul  \\\n","0      11110515   0.287584          0.296431   0.279759   0.288310   0.162682   \n","1      11110530   0.559293          0.546111   0.501187   0.499886   0.925562   \n","2      11110540   0.169136          0.162970   0.142422   0.141736   0.106723   \n","3      11110550   0.151784          0.148483   0.149923   0.147516   0.074800   \n","4      11110560   0.142028          0.140370   0.150192   0.147490   0.078464   \n","..          ...        ...               ...        ...        ...        ...   \n","421    11740650   0.207429          0.205418   0.195469   0.195778   0.157733   \n","422    11740660   0.336256          0.342601   0.313868   0.322752   0.231469   \n","423    11740685   0.360764          0.377772   0.391781   0.400668   0.308919   \n","424    11740690   0.065798          0.067394   0.058291   0.060833   0.046921   \n","425    11740700   0.202329          0.223582   0.221370   0.235708   0.167620   \n","\n","     PE6_Seoul  PE7_Seoul  PE8_Seoul        SC1        SC2  \n","0     0.146748   0.160513   0.146517  20.968226  12.462606  \n","1     0.897995   0.857813   0.849877  14.911437  24.390718  \n","2     0.096519   0.097452   0.090494   8.289952  10.087291  \n","3     0.065471   0.075752   0.066992  20.964832   9.778932  \n","4     0.069434   0.086648   0.076321  20.261651  10.439000  \n","..         ...        ...        ...        ...        ...  \n","421   0.151722   0.165447   0.157997  16.808418  10.470453  \n","422   0.226449   0.234535   0.229172  19.334441  12.042219  \n","423   0.297770   0.350197   0.329519  26.894204  15.633482  \n","424   0.046118   0.045128   0.044851   9.062725   5.622757  \n","425   0.167121   0.186291   0.181087  26.722189  15.126861  \n","\n","[426 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-0b7448c9-ba56-4405-84a5-a565e128d6ee\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ADMDONG_CD</th>\n","      <th>PE1_Seoul</th>\n","      <th>PE2_all_to_seoul</th>\n","      <th>PE3_Seoul</th>\n","      <th>PE4_Seoul</th>\n","      <th>PE5_Seoul</th>\n","      <th>PE6_Seoul</th>\n","      <th>PE7_Seoul</th>\n","      <th>PE8_Seoul</th>\n","      <th>SC1</th>\n","      <th>SC2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>11110515</td>\n","      <td>0.287584</td>\n","      <td>0.296431</td>\n","      <td>0.279759</td>\n","      <td>0.288310</td>\n","      <td>0.162682</td>\n","      <td>0.146748</td>\n","      <td>0.160513</td>\n","      <td>0.146517</td>\n","      <td>20.968226</td>\n","      <td>12.462606</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>11110530</td>\n","      <td>0.559293</td>\n","      <td>0.546111</td>\n","      <td>0.501187</td>\n","      <td>0.499886</td>\n","      <td>0.925562</td>\n","      <td>0.897995</td>\n","      <td>0.857813</td>\n","      <td>0.849877</td>\n","      <td>14.911437</td>\n","      <td>24.390718</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>11110540</td>\n","      <td>0.169136</td>\n","      <td>0.162970</td>\n","      <td>0.142422</td>\n","      <td>0.141736</td>\n","      <td>0.106723</td>\n","      <td>0.096519</td>\n","      <td>0.097452</td>\n","      <td>0.090494</td>\n","      <td>8.289952</td>\n","      <td>10.087291</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>11110550</td>\n","      <td>0.151784</td>\n","      <td>0.148483</td>\n","      <td>0.149923</td>\n","      <td>0.147516</td>\n","      <td>0.074800</td>\n","      <td>0.065471</td>\n","      <td>0.075752</td>\n","      <td>0.066992</td>\n","      <td>20.964832</td>\n","      <td>9.778932</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>11110560</td>\n","      <td>0.142028</td>\n","      <td>0.140370</td>\n","      <td>0.150192</td>\n","      <td>0.147490</td>\n","      <td>0.078464</td>\n","      <td>0.069434</td>\n","      <td>0.086648</td>\n","      <td>0.076321</td>\n","      <td>20.261651</td>\n","      <td>10.439000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>421</th>\n","      <td>11740650</td>\n","      <td>0.207429</td>\n","      <td>0.205418</td>\n","      <td>0.195469</td>\n","      <td>0.195778</td>\n","      <td>0.157733</td>\n","      <td>0.151722</td>\n","      <td>0.165447</td>\n","      <td>0.157997</td>\n","      <td>16.808418</td>\n","      <td>10.470453</td>\n","    </tr>\n","    <tr>\n","      <th>422</th>\n","      <td>11740660</td>\n","      <td>0.336256</td>\n","      <td>0.342601</td>\n","      <td>0.313868</td>\n","      <td>0.322752</td>\n","      <td>0.231469</td>\n","      <td>0.226449</td>\n","      <td>0.234535</td>\n","      <td>0.229172</td>\n","      <td>19.334441</td>\n","      <td>12.042219</td>\n","    </tr>\n","    <tr>\n","      <th>423</th>\n","      <td>11740685</td>\n","      <td>0.360764</td>\n","      <td>0.377772</td>\n","      <td>0.391781</td>\n","      <td>0.400668</td>\n","      <td>0.308919</td>\n","      <td>0.297770</td>\n","      <td>0.350197</td>\n","      <td>0.329519</td>\n","      <td>26.894204</td>\n","      <td>15.633482</td>\n","    </tr>\n","    <tr>\n","      <th>424</th>\n","      <td>11740690</td>\n","      <td>0.065798</td>\n","      <td>0.067394</td>\n","      <td>0.058291</td>\n","      <td>0.060833</td>\n","      <td>0.046921</td>\n","      <td>0.046118</td>\n","      <td>0.045128</td>\n","      <td>0.044851</td>\n","      <td>9.062725</td>\n","      <td>5.622757</td>\n","    </tr>\n","    <tr>\n","      <th>425</th>\n","      <td>11740700</td>\n","      <td>0.202329</td>\n","      <td>0.223582</td>\n","      <td>0.221370</td>\n","      <td>0.235708</td>\n","      <td>0.167620</td>\n","      <td>0.167121</td>\n","      <td>0.186291</td>\n","      <td>0.181087</td>\n","      <td>26.722189</td>\n","      <td>15.126861</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>426 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0b7448c9-ba56-4405-84a5-a565e128d6ee')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0b7448c9-ba56-4405-84a5-a565e128d6ee button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0b7448c9-ba56-4405-84a5-a565e128d6ee');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-aa6b1d10-585f-4f7e-8a37-97b9ce025035\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-aa6b1d10-585f-4f7e-8a37-97b9ce025035')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-aa6b1d10-585f-4f7e-8a37-97b9ce025035 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_9d2cde8c-86ac-4f13-824b-e16689341c4e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('combined_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_9d2cde8c-86ac-4f13-824b-e16689341c4e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('combined_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"combined_df","summary":"{\n  \"name\": \"combined_df\",\n  \"rows\": 426,\n  \"fields\": [\n    {\n      \"column\": \"ADMDONG_CD\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 192077,\n        \"min\": 11110515,\n        \"max\": 11740700,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          11740610,\n          11215840,\n          11380510\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE1_Seoul\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2083776635978471,\n        \"min\": 0.0284616494148344,\n        \"max\": 1.6221061505122858,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.4192539329805529,\n          0.3450356654564813,\n          0.2384203204786906\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE2_all_to_seoul\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2192684368180186,\n        \"min\": 0.0260310989497565,\n        \"max\": 1.669602801735381,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.4148466431541437,\n          0.3198938956912089,\n          0.2255151839287061\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE3_Seoul\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2134941609152402,\n        \"min\": 0.0259272764909271,\n        \"max\": 1.675715078658569,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.4002347935786607,\n          0.3394700711639901,\n          0.2510754090310808\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE4_Seoul\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.22189189658679323,\n        \"min\": 0.0237595273066381,\n        \"max\": 1.705944758668851,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.3997326448696905,\n          0.319727929135043,\n          0.2383983844839557\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE5_Seoul\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.34787663075925024,\n        \"min\": 0.0175149137290227,\n        \"max\": 3.2751882198650417,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.2697238505920379,\n          0.2161525876269936,\n          0.23508392241716\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE6_Seoul\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.37704644289946926,\n        \"min\": 0.0156087101359277,\n        \"max\": 3.5787316314803594,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.2578683060724537,\n          0.199376863100176,\n          0.2096681658079328\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE7_Seoul\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.32725883180180565,\n        \"min\": 0.0186290578327379,\n        \"max\": 3.126625926014284,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.2772796187171594,\n          0.2245104348925563,\n          0.2506979053366686\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE8_Seoul\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.35924640694780824,\n        \"min\": 0.0174950594375143,\n        \"max\": 3.43368583459848,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.2645335935505371,\n          0.2070682600262268,\n          0.2235216879376231\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SC1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.2775043842266,\n        \"min\": 2.397867661480869,\n        \"max\": 53.68455148786344,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          21.759678658329573,\n          22.04119424726494,\n          20.58580138551985\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SC2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.920892040966493,\n        \"min\": 2.5111332111322597,\n        \"max\": 45.02318769697686,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          10.651925249090151,\n          11.16037129628092,\n          10.541583560674823\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["# renaming the index\n","combined_df = combined_df.rename(columns={\n","    'ADMDONG_CD': 'DongCode',\n","    'PE1_Seoul': 'PE1_Nonwork_diffOD_intraSeoul',\n","    'PE2_all_to_seoul': 'PE2_Nonwork_diffOD_Korea',\n","    'PE3_Seoul': 'PE3_Nonwork_allOD_intraSeoul',\n","    'PE4_Seoul': 'PE4_Nonwork_allOD_Korea',\n","    'PE5_Seoul': 'PE5_Work_diffOD_intraSeoul',\n","    'PE6_Seoul': 'PE6_Work_diffOD_Korea',\n","    'PE7_Seoul': 'PE7_Work_allOD_intraSeoul',\n","    'PE8_Seoul': 'PE8_Work_allOD_Korea',\n","    'SC1': 'SC1_Nonwork',\n","    'SC2': 'SC2_Work'\n","})"],"metadata":{"id":"K3D84Nssw191","executionInfo":{"status":"ok","timestamp":1748970914700,"user_tz":-480,"elapsed":5,"user":{"displayName":"JIEUN LEE","userId":"02287882068179401694"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["combined_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"K6nylIIwypCb","executionInfo":{"status":"ok","timestamp":1748970935862,"user_tz":-480,"elapsed":44,"user":{"displayName":"JIEUN LEE","userId":"02287882068179401694"}},"outputId":"456e8a9b-8041-4850-d093-3cdad9da4328"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     DongCode  PE1_Nonwork_diffOD_intraSeoul  PE2_Nonwork_diffOD_Korea  \\\n","0    11110515                       0.287584                  0.296431   \n","1    11110530                       0.559293                  0.546111   \n","2    11110540                       0.169136                  0.162970   \n","3    11110550                       0.151784                  0.148483   \n","4    11110560                       0.142028                  0.140370   \n","..        ...                            ...                       ...   \n","421  11740650                       0.207429                  0.205418   \n","422  11740660                       0.336256                  0.342601   \n","423  11740685                       0.360764                  0.377772   \n","424  11740690                       0.065798                  0.067394   \n","425  11740700                       0.202329                  0.223582   \n","\n","     PE3_Nonwork_allOD_intraSeoul  PE4_Nonwork_allOD_Korea  \\\n","0                        0.279759                 0.288310   \n","1                        0.501187                 0.499886   \n","2                        0.142422                 0.141736   \n","3                        0.149923                 0.147516   \n","4                        0.150192                 0.147490   \n","..                            ...                      ...   \n","421                      0.195469                 0.195778   \n","422                      0.313868                 0.322752   \n","423                      0.391781                 0.400668   \n","424                      0.058291                 0.060833   \n","425                      0.221370                 0.235708   \n","\n","     PE5_Work_diffOD_intraSeoul  PE6_Work_diffOD_Korea  \\\n","0                      0.162682               0.146748   \n","1                      0.925562               0.897995   \n","2                      0.106723               0.096519   \n","3                      0.074800               0.065471   \n","4                      0.078464               0.069434   \n","..                          ...                    ...   \n","421                    0.157733               0.151722   \n","422                    0.231469               0.226449   \n","423                    0.308919               0.297770   \n","424                    0.046921               0.046118   \n","425                    0.167620               0.167121   \n","\n","     PE7_Work_allOD_intraSeoul  PE8_Work_allOD_Korea  SC1_Nonwork   SC2_Work  \n","0                     0.160513              0.146517    20.968226  12.462606  \n","1                     0.857813              0.849877    14.911437  24.390718  \n","2                     0.097452              0.090494     8.289952  10.087291  \n","3                     0.075752              0.066992    20.964832   9.778932  \n","4                     0.086648              0.076321    20.261651  10.439000  \n","..                         ...                   ...          ...        ...  \n","421                   0.165447              0.157997    16.808418  10.470453  \n","422                   0.234535              0.229172    19.334441  12.042219  \n","423                   0.350197              0.329519    26.894204  15.633482  \n","424                   0.045128              0.044851     9.062725   5.622757  \n","425                   0.186291              0.181087    26.722189  15.126861  \n","\n","[426 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-6f88ec06-aaf3-46d9-8236-34538ebab24e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DongCode</th>\n","      <th>PE1_Nonwork_diffOD_intraSeoul</th>\n","      <th>PE2_Nonwork_diffOD_Korea</th>\n","      <th>PE3_Nonwork_allOD_intraSeoul</th>\n","      <th>PE4_Nonwork_allOD_Korea</th>\n","      <th>PE5_Work_diffOD_intraSeoul</th>\n","      <th>PE6_Work_diffOD_Korea</th>\n","      <th>PE7_Work_allOD_intraSeoul</th>\n","      <th>PE8_Work_allOD_Korea</th>\n","      <th>SC1_Nonwork</th>\n","      <th>SC2_Work</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>11110515</td>\n","      <td>0.287584</td>\n","      <td>0.296431</td>\n","      <td>0.279759</td>\n","      <td>0.288310</td>\n","      <td>0.162682</td>\n","      <td>0.146748</td>\n","      <td>0.160513</td>\n","      <td>0.146517</td>\n","      <td>20.968226</td>\n","      <td>12.462606</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>11110530</td>\n","      <td>0.559293</td>\n","      <td>0.546111</td>\n","      <td>0.501187</td>\n","      <td>0.499886</td>\n","      <td>0.925562</td>\n","      <td>0.897995</td>\n","      <td>0.857813</td>\n","      <td>0.849877</td>\n","      <td>14.911437</td>\n","      <td>24.390718</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>11110540</td>\n","      <td>0.169136</td>\n","      <td>0.162970</td>\n","      <td>0.142422</td>\n","      <td>0.141736</td>\n","      <td>0.106723</td>\n","      <td>0.096519</td>\n","      <td>0.097452</td>\n","      <td>0.090494</td>\n","      <td>8.289952</td>\n","      <td>10.087291</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>11110550</td>\n","      <td>0.151784</td>\n","      <td>0.148483</td>\n","      <td>0.149923</td>\n","      <td>0.147516</td>\n","      <td>0.074800</td>\n","      <td>0.065471</td>\n","      <td>0.075752</td>\n","      <td>0.066992</td>\n","      <td>20.964832</td>\n","      <td>9.778932</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>11110560</td>\n","      <td>0.142028</td>\n","      <td>0.140370</td>\n","      <td>0.150192</td>\n","      <td>0.147490</td>\n","      <td>0.078464</td>\n","      <td>0.069434</td>\n","      <td>0.086648</td>\n","      <td>0.076321</td>\n","      <td>20.261651</td>\n","      <td>10.439000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>421</th>\n","      <td>11740650</td>\n","      <td>0.207429</td>\n","      <td>0.205418</td>\n","      <td>0.195469</td>\n","      <td>0.195778</td>\n","      <td>0.157733</td>\n","      <td>0.151722</td>\n","      <td>0.165447</td>\n","      <td>0.157997</td>\n","      <td>16.808418</td>\n","      <td>10.470453</td>\n","    </tr>\n","    <tr>\n","      <th>422</th>\n","      <td>11740660</td>\n","      <td>0.336256</td>\n","      <td>0.342601</td>\n","      <td>0.313868</td>\n","      <td>0.322752</td>\n","      <td>0.231469</td>\n","      <td>0.226449</td>\n","      <td>0.234535</td>\n","      <td>0.229172</td>\n","      <td>19.334441</td>\n","      <td>12.042219</td>\n","    </tr>\n","    <tr>\n","      <th>423</th>\n","      <td>11740685</td>\n","      <td>0.360764</td>\n","      <td>0.377772</td>\n","      <td>0.391781</td>\n","      <td>0.400668</td>\n","      <td>0.308919</td>\n","      <td>0.297770</td>\n","      <td>0.350197</td>\n","      <td>0.329519</td>\n","      <td>26.894204</td>\n","      <td>15.633482</td>\n","    </tr>\n","    <tr>\n","      <th>424</th>\n","      <td>11740690</td>\n","      <td>0.065798</td>\n","      <td>0.067394</td>\n","      <td>0.058291</td>\n","      <td>0.060833</td>\n","      <td>0.046921</td>\n","      <td>0.046118</td>\n","      <td>0.045128</td>\n","      <td>0.044851</td>\n","      <td>9.062725</td>\n","      <td>5.622757</td>\n","    </tr>\n","    <tr>\n","      <th>425</th>\n","      <td>11740700</td>\n","      <td>0.202329</td>\n","      <td>0.223582</td>\n","      <td>0.221370</td>\n","      <td>0.235708</td>\n","      <td>0.167620</td>\n","      <td>0.167121</td>\n","      <td>0.186291</td>\n","      <td>0.181087</td>\n","      <td>26.722189</td>\n","      <td>15.126861</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>426 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6f88ec06-aaf3-46d9-8236-34538ebab24e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6f88ec06-aaf3-46d9-8236-34538ebab24e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6f88ec06-aaf3-46d9-8236-34538ebab24e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-7a52b375-ab2d-444e-a493-d8ece4335146\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7a52b375-ab2d-444e-a493-d8ece4335146')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-7a52b375-ab2d-444e-a493-d8ece4335146 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_1c0bd2ad-6696-445e-af16-e36ecd4995e3\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('combined_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_1c0bd2ad-6696-445e-af16-e36ecd4995e3 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('combined_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"combined_df","summary":"{\n  \"name\": \"combined_df\",\n  \"rows\": 426,\n  \"fields\": [\n    {\n      \"column\": \"DongCode\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 192077,\n        \"min\": 11110515,\n        \"max\": 11740700,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          11740610,\n          11215840,\n          11380510\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE1_Nonwork_diffOD_intraSeoul\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2083776635978471,\n        \"min\": 0.0284616494148344,\n        \"max\": 1.6221061505122858,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.4192539329805529,\n          0.3450356654564813,\n          0.2384203204786906\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE2_Nonwork_diffOD_Korea\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2192684368180186,\n        \"min\": 0.0260310989497565,\n        \"max\": 1.669602801735381,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.4148466431541437,\n          0.3198938956912089,\n          0.2255151839287061\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE3_Nonwork_allOD_intraSeoul\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2134941609152402,\n        \"min\": 0.0259272764909271,\n        \"max\": 1.675715078658569,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.4002347935786607,\n          0.3394700711639901,\n          0.2510754090310808\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE4_Nonwork_allOD_Korea\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.22189189658679323,\n        \"min\": 0.0237595273066381,\n        \"max\": 1.705944758668851,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.3997326448696905,\n          0.319727929135043,\n          0.2383983844839557\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE5_Work_diffOD_intraSeoul\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.34787663075925024,\n        \"min\": 0.0175149137290227,\n        \"max\": 3.2751882198650417,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.2697238505920379,\n          0.2161525876269936,\n          0.23508392241716\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE6_Work_diffOD_Korea\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.37704644289946926,\n        \"min\": 0.0156087101359277,\n        \"max\": 3.5787316314803594,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.2578683060724537,\n          0.199376863100176,\n          0.2096681658079328\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE7_Work_allOD_intraSeoul\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.32725883180180565,\n        \"min\": 0.0186290578327379,\n        \"max\": 3.126625926014284,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.2772796187171594,\n          0.2245104348925563,\n          0.2506979053366686\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE8_Work_allOD_Korea\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.35924640694780824,\n        \"min\": 0.0174950594375143,\n        \"max\": 3.43368583459848,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.2645335935505371,\n          0.2070682600262268,\n          0.2235216879376231\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SC1_Nonwork\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.2775043842266,\n        \"min\": 2.397867661480869,\n        \"max\": 53.68455148786344,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          21.759678658329573,\n          22.04119424726494,\n          20.58580138551985\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SC2_Work\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.920892040966493,\n        \"min\": 2.5111332111322597,\n        \"max\": 45.02318769697686,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          10.651925249090151,\n          11.16037129628092,\n          10.541583560674823\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["# Save or display\n","combined_df.to_csv(os.path.join(folder, 'Combined_Indices_by_Dong.csv'), index=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5MIWbk8kvoEA","executionInfo":{"status":"ok","timestamp":1748970954486,"user_tz":-480,"elapsed":14,"user":{"displayName":"JIEUN LEE","userId":"02287882068179401694"}},"outputId":"7ae626f3-c8f1-4bff-9c65-4122b7028c65"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["   DongCode  PE1_Nonwork_diffOD_intraSeoul  PE2_Nonwork_diffOD_Korea  \\\n","0  11110515                       0.287584                  0.296431   \n","1  11110530                       0.559293                  0.546111   \n","2  11110540                       0.169136                  0.162970   \n","3  11110550                       0.151784                  0.148483   \n","4  11110560                       0.142028                  0.140370   \n","\n","   PE3_Nonwork_allOD_intraSeoul  PE4_Nonwork_allOD_Korea  \\\n","0                      0.279759                 0.288310   \n","1                      0.501187                 0.499886   \n","2                      0.142422                 0.141736   \n","3                      0.149923                 0.147516   \n","4                      0.150192                 0.147490   \n","\n","   PE5_Work_diffOD_intraSeoul  PE6_Work_diffOD_Korea  \\\n","0                    0.162682               0.146748   \n","1                    0.925562               0.897995   \n","2                    0.106723               0.096519   \n","3                    0.074800               0.065471   \n","4                    0.078464               0.069434   \n","\n","   PE7_Work_allOD_intraSeoul  PE8_Work_allOD_Korea  SC1_Nonwork   SC2_Work  \n","0                   0.160513              0.146517    20.968226  12.462606  \n","1                   0.857813              0.849877    14.911437  24.390718  \n","2                   0.097452              0.090494     8.289952  10.087291  \n","3                   0.075752              0.066992    20.964832   9.778932  \n","4                   0.086648              0.076321    20.261651  10.439000  \n"]}]},{"cell_type":"code","source":["combined_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"iYRVG_s5yw8Y","executionInfo":{"status":"ok","timestamp":1748970971512,"user_tz":-480,"elapsed":36,"user":{"displayName":"JIEUN LEE","userId":"02287882068179401694"}},"outputId":"107483c8-56a8-401f-b0b8-646ce834b148"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   DongCode  PE1_Nonwork_diffOD_intraSeoul  PE2_Nonwork_diffOD_Korea  \\\n","0  11110515                       0.287584                  0.296431   \n","1  11110530                       0.559293                  0.546111   \n","2  11110540                       0.169136                  0.162970   \n","3  11110550                       0.151784                  0.148483   \n","4  11110560                       0.142028                  0.140370   \n","\n","   PE3_Nonwork_allOD_intraSeoul  PE4_Nonwork_allOD_Korea  \\\n","0                      0.279759                 0.288310   \n","1                      0.501187                 0.499886   \n","2                      0.142422                 0.141736   \n","3                      0.149923                 0.147516   \n","4                      0.150192                 0.147490   \n","\n","   PE5_Work_diffOD_intraSeoul  PE6_Work_diffOD_Korea  \\\n","0                    0.162682               0.146748   \n","1                    0.925562               0.897995   \n","2                    0.106723               0.096519   \n","3                    0.074800               0.065471   \n","4                    0.078464               0.069434   \n","\n","   PE7_Work_allOD_intraSeoul  PE8_Work_allOD_Korea  SC1_Nonwork   SC2_Work  \n","0                   0.160513              0.146517    20.968226  12.462606  \n","1                   0.857813              0.849877    14.911437  24.390718  \n","2                   0.097452              0.090494     8.289952  10.087291  \n","3                   0.075752              0.066992    20.964832   9.778932  \n","4                   0.086648              0.076321    20.261651  10.439000  "],"text/html":["\n","  <div id=\"df-ddb04a41-35ba-4b91-8b32-d77bf6a1ffac\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DongCode</th>\n","      <th>PE1_Nonwork_diffOD_intraSeoul</th>\n","      <th>PE2_Nonwork_diffOD_Korea</th>\n","      <th>PE3_Nonwork_allOD_intraSeoul</th>\n","      <th>PE4_Nonwork_allOD_Korea</th>\n","      <th>PE5_Work_diffOD_intraSeoul</th>\n","      <th>PE6_Work_diffOD_Korea</th>\n","      <th>PE7_Work_allOD_intraSeoul</th>\n","      <th>PE8_Work_allOD_Korea</th>\n","      <th>SC1_Nonwork</th>\n","      <th>SC2_Work</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>11110515</td>\n","      <td>0.287584</td>\n","      <td>0.296431</td>\n","      <td>0.279759</td>\n","      <td>0.288310</td>\n","      <td>0.162682</td>\n","      <td>0.146748</td>\n","      <td>0.160513</td>\n","      <td>0.146517</td>\n","      <td>20.968226</td>\n","      <td>12.462606</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>11110530</td>\n","      <td>0.559293</td>\n","      <td>0.546111</td>\n","      <td>0.501187</td>\n","      <td>0.499886</td>\n","      <td>0.925562</td>\n","      <td>0.897995</td>\n","      <td>0.857813</td>\n","      <td>0.849877</td>\n","      <td>14.911437</td>\n","      <td>24.390718</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>11110540</td>\n","      <td>0.169136</td>\n","      <td>0.162970</td>\n","      <td>0.142422</td>\n","      <td>0.141736</td>\n","      <td>0.106723</td>\n","      <td>0.096519</td>\n","      <td>0.097452</td>\n","      <td>0.090494</td>\n","      <td>8.289952</td>\n","      <td>10.087291</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>11110550</td>\n","      <td>0.151784</td>\n","      <td>0.148483</td>\n","      <td>0.149923</td>\n","      <td>0.147516</td>\n","      <td>0.074800</td>\n","      <td>0.065471</td>\n","      <td>0.075752</td>\n","      <td>0.066992</td>\n","      <td>20.964832</td>\n","      <td>9.778932</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>11110560</td>\n","      <td>0.142028</td>\n","      <td>0.140370</td>\n","      <td>0.150192</td>\n","      <td>0.147490</td>\n","      <td>0.078464</td>\n","      <td>0.069434</td>\n","      <td>0.086648</td>\n","      <td>0.076321</td>\n","      <td>20.261651</td>\n","      <td>10.439000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ddb04a41-35ba-4b91-8b32-d77bf6a1ffac')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ddb04a41-35ba-4b91-8b32-d77bf6a1ffac button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ddb04a41-35ba-4b91-8b32-d77bf6a1ffac');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-7cadf6fe-c436-4c49-ba57-ef8618f84619\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7cadf6fe-c436-4c49-ba57-ef8618f84619')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-7cadf6fe-c436-4c49-ba57-ef8618f84619 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"combined_df","summary":"{\n  \"name\": \"combined_df\",\n  \"rows\": 426,\n  \"fields\": [\n    {\n      \"column\": \"DongCode\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 192077,\n        \"min\": 11110515,\n        \"max\": 11740700,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          11740610,\n          11215840,\n          11380510\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE1_Nonwork_diffOD_intraSeoul\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2083776635978471,\n        \"min\": 0.0284616494148344,\n        \"max\": 1.6221061505122858,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.4192539329805529,\n          0.3450356654564813,\n          0.2384203204786906\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE2_Nonwork_diffOD_Korea\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2192684368180186,\n        \"min\": 0.0260310989497565,\n        \"max\": 1.669602801735381,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.4148466431541437,\n          0.3198938956912089,\n          0.2255151839287061\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE3_Nonwork_allOD_intraSeoul\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2134941609152402,\n        \"min\": 0.0259272764909271,\n        \"max\": 1.675715078658569,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.4002347935786607,\n          0.3394700711639901,\n          0.2510754090310808\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE4_Nonwork_allOD_Korea\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.22189189658679323,\n        \"min\": 0.0237595273066381,\n        \"max\": 1.705944758668851,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.3997326448696905,\n          0.319727929135043,\n          0.2383983844839557\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE5_Work_diffOD_intraSeoul\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.34787663075925024,\n        \"min\": 0.0175149137290227,\n        \"max\": 3.2751882198650417,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.2697238505920379,\n          0.2161525876269936,\n          0.23508392241716\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE6_Work_diffOD_Korea\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.37704644289946926,\n        \"min\": 0.0156087101359277,\n        \"max\": 3.5787316314803594,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.2578683060724537,\n          0.199376863100176,\n          0.2096681658079328\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE7_Work_allOD_intraSeoul\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.32725883180180565,\n        \"min\": 0.0186290578327379,\n        \"max\": 3.126625926014284,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.2772796187171594,\n          0.2245104348925563,\n          0.2506979053366686\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE8_Work_allOD_Korea\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.35924640694780824,\n        \"min\": 0.0174950594375143,\n        \"max\": 3.43368583459848,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.2645335935505371,\n          0.2070682600262268,\n          0.2235216879376231\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SC1_Nonwork\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.2775043842266,\n        \"min\": 2.397867661480869,\n        \"max\": 53.68455148786344,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          21.759678658329573,\n          22.04119424726494,\n          20.58580138551985\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SC2_Work\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.920892040966493,\n        \"min\": 2.5111332111322597,\n        \"max\": 45.02318769697686,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          10.651925249090151,\n          11.16037129628092,\n          10.541583560674823\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["!pip install openpyxl\n","combined_df.to_excel(os.path.join(folder, 'Combined_Indices_by_Dong.xlsx'), index=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8RC0wMhLyyxK","executionInfo":{"status":"ok","timestamp":1748971017573,"user_tz":-480,"elapsed":1614,"user":{"displayName":"JIEUN LEE","userId":"02287882068179401694"}},"outputId":"3c5a4ec9-2da8-488d-e63e-71acf9be5a74"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting openpyxl\n","  Downloading openpyxl-3.1.5-py2.py3-none-any.whl.metadata (2.5 kB)\n","Collecting et-xmlfile (from openpyxl)\n","  Downloading et_xmlfile-2.0.0-py3-none-any.whl.metadata (2.7 kB)\n","Downloading openpyxl-3.1.5-py2.py3-none-any.whl (250 kB)\n","\u001b[?25l   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/250.9 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K   \u001b[91m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[90m╺\u001b[0m\u001b[90m━━━━━━━━━━\u001b[0m \u001b[32m184.3/250.9 kB\u001b[0m \u001b[31m5.4 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m250.9/250.9 kB\u001b[0m \u001b[31m5.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading et_xmlfile-2.0.0-py3-none-any.whl (18 kB)\n","Installing collected packages: et-xmlfile, openpyxl\n","Successfully installed et-xmlfile-2.0.0 openpyxl-3.1.5\n"]}]},{"cell_type":"code","source":["#@title load dong code name\n","df_name = pd.read_csv('/content/drive/MyDrive/FMC_Data/ADMI_202303.csv')"],"metadata":{"id":"YaU_QvqmQ9sj","executionInfo":{"status":"ok","timestamp":1748971105188,"user_tz":-480,"elapsed":243,"user":{"displayName":"JIEUN LEE","userId":"02287882068179401694"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["# Combine 'sido' and 'gu' columns with a space in between\n","df_name['full_gu_name'] = df_name['SIDO_NM'] + ' ' + df_name['SGG_NM']\n","df_name.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"9JjN0zi0RXb7","executionInfo":{"status":"ok","timestamp":1748971106517,"user_tz":-480,"elapsed":37,"user":{"displayName":"JIEUN LEE","userId":"02287882068179401694"}},"outputId":"7df3d6a9-af58-4f03-9019-256038db6ca0"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  SIDO_NM SGG_NM ADMI_NM   ADMI_CD          FULL_NM  BASE_YM full_gu_name\n","0   서울특별시    종로구   청운효자동  11110515  서울특별시 종로구 청운효자동   202303    서울특별시 종로구\n","1   서울특별시    종로구     사직동  11110530    서울특별시 종로구 사직동   202303    서울특별시 종로구\n","2   서울특별시    종로구     삼청동  11110540    서울특별시 종로구 삼청동   202303    서울특별시 종로구\n","3   서울특별시    종로구     부암동  11110550    서울특별시 종로구 부암동   202303    서울특별시 종로구\n","4   서울특별시    종로구     평창동  11110560    서울특별시 종로구 평창동   202303    서울특별시 종로구"],"text/html":["\n","  <div id=\"df-6ec0faeb-3b19-4061-ae6e-447faa433c28\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>SIDO_NM</th>\n","      <th>SGG_NM</th>\n","      <th>ADMI_NM</th>\n","      <th>ADMI_CD</th>\n","      <th>FULL_NM</th>\n","      <th>BASE_YM</th>\n","      <th>full_gu_name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>서울특별시</td>\n","      <td>종로구</td>\n","      <td>청운효자동</td>\n","      <td>11110515</td>\n","      <td>서울특별시 종로구 청운효자동</td>\n","      <td>202303</td>\n","      <td>서울특별시 종로구</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>서울특별시</td>\n","      <td>종로구</td>\n","      <td>사직동</td>\n","      <td>11110530</td>\n","      <td>서울특별시 종로구 사직동</td>\n","      <td>202303</td>\n","      <td>서울특별시 종로구</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>서울특별시</td>\n","      <td>종로구</td>\n","      <td>삼청동</td>\n","      <td>11110540</td>\n","      <td>서울특별시 종로구 삼청동</td>\n","      <td>202303</td>\n","      <td>서울특별시 종로구</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>서울특별시</td>\n","      <td>종로구</td>\n","      <td>부암동</td>\n","      <td>11110550</td>\n","      <td>서울특별시 종로구 부암동</td>\n","      <td>202303</td>\n","      <td>서울특별시 종로구</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>서울특별시</td>\n","      <td>종로구</td>\n","      <td>평창동</td>\n","      <td>11110560</td>\n","      <td>서울특별시 종로구 평창동</td>\n","      <td>202303</td>\n","      <td>서울특별시 종로구</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6ec0faeb-3b19-4061-ae6e-447faa433c28')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6ec0faeb-3b19-4061-ae6e-447faa433c28 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6ec0faeb-3b19-4061-ae6e-447faa433c28');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-6940ef8e-916c-4093-ada6-a0701dc14781\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6940ef8e-916c-4093-ada6-a0701dc14781')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-6940ef8e-916c-4093-ada6-a0701dc14781 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_name","summary":"{\n  \"name\": \"df_name\",\n  \"rows\": 3524,\n  \"fields\": [\n    {\n      \"column\": \"SIDO_NM\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 17,\n        \"samples\": [\n          \"\\uc11c\\uc6b8\\ud2b9\\ubcc4\\uc2dc\",\n          \"\\ubd80\\uc0b0\\uad11\\uc5ed\\uc2dc\",\n          \"\\ub300\\uc804\\uad11\\uc5ed\\uc2dc\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SGG_NM\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 227,\n        \"samples\": [\n          \"\\ub3c4\\ubd09\\uad6c\",\n          \"\\uc804\\uc8fc\\uc2dc \\uc644\\uc0b0\\uad6c\",\n          \"\\uac15\\uc11c\\uad6c\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ADMI_NM\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3173,\n        \"samples\": [\n          \"\\ub300\\ub95c\\ub3d9\",\n          \"\\uad6c\\ub85c3\\ub3d9\",\n          \"\\uc601\\uc8fc2\\ub3d9\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ADMI_CD\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11919137,\n        \"min\": 11110515,\n        \"max\": 50130620,\n        \"num_unique_values\": 3524,\n        \"samples\": [\n          11620605,\n          45113650,\n          48840350\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FULL_NM\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3524,\n        \"samples\": [\n          \"\\uc11c\\uc6b8\\ud2b9\\ubcc4\\uc2dc \\uad00\\uc545\\uad6c \\uc740\\ucc9c\\ub3d9\",\n          \"\\uc804\\ub77c\\ubd81\\ub3c4 \\uc804\\uc8fc\\uc2dc \\ub355\\uc9c4\\uad6c \\uc870\\ucd0c\\ub3d9\",\n          \"\\uacbd\\uc0c1\\ub0a8\\ub3c4 \\ub0a8\\ud574\\uad70 \\ub0a8\\uba74\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BASE_YM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 202303,\n        \"max\": 202303,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          202303\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"full_gu_name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 249,\n        \"samples\": [\n          \"\\ucda9\\uccad\\ubd81\\ub3c4 \\uccad\\uc8fc\\uc2dc \\uccad\\uc6d0\\uad6c\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":[],"metadata":{"id":"gh-6sz-rzSLn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Merge origin dong's gu name on the df_indices\n","selected_cols_to_merge = ['ADMI_CD', 'FULL_NM', 'full_gu_name', 'SIDO_NM', 'SGG_NM', 'ADMI_NM']\n","merged_df = pd.merge(combined_df, df_name[selected_cols_to_merge], left_on = 'DongCode', right_on = 'ADMI_CD', how = 'left')\n","merged_df = merged_df.drop(columns=['ADMI_CD'])\n","merged_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":486},"id":"f2YgFqJ_RV_a","executionInfo":{"status":"ok","timestamp":1748971217410,"user_tz":-480,"elapsed":44,"user":{"displayName":"JIEUN LEE","userId":"02287882068179401694"}},"outputId":"6fdcf4b5-e02b-4498-b29d-9c31615f5cc4"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   DongCode  PE1_Nonwork_diffOD_intraSeoul  PE2_Nonwork_diffOD_Korea  \\\n","0  11110515                       0.287584                  0.296431   \n","1  11110530                       0.559293                  0.546111   \n","2  11110540                       0.169136                  0.162970   \n","3  11110550                       0.151784                  0.148483   \n","4  11110560                       0.142028                  0.140370   \n","\n","   PE3_Nonwork_allOD_intraSeoul  PE4_Nonwork_allOD_Korea  \\\n","0                      0.279759                 0.288310   \n","1                      0.501187                 0.499886   \n","2                      0.142422                 0.141736   \n","3                      0.149923                 0.147516   \n","4                      0.150192                 0.147490   \n","\n","   PE5_Work_diffOD_intraSeoul  PE6_Work_diffOD_Korea  \\\n","0                    0.162682               0.146748   \n","1                    0.925562               0.897995   \n","2                    0.106723               0.096519   \n","3                    0.074800               0.065471   \n","4                    0.078464               0.069434   \n","\n","   PE7_Work_allOD_intraSeoul  PE8_Work_allOD_Korea  SC1_Nonwork   SC2_Work  \\\n","0                   0.160513              0.146517    20.968226  12.462606   \n","1                   0.857813              0.849877    14.911437  24.390718   \n","2                   0.097452              0.090494     8.289952  10.087291   \n","3                   0.075752              0.066992    20.964832   9.778932   \n","4                   0.086648              0.076321    20.261651  10.439000   \n","\n","           FULL_NM full_gu_name SIDO_NM SGG_NM ADMI_NM  \n","0  서울특별시 종로구 청운효자동    서울특별시 종로구   서울특별시    종로구   청운효자동  \n","1    서울특별시 종로구 사직동    서울특별시 종로구   서울특별시    종로구     사직동  \n","2    서울특별시 종로구 삼청동    서울특별시 종로구   서울특별시    종로구     삼청동  \n","3    서울특별시 종로구 부암동    서울특별시 종로구   서울특별시    종로구     부암동  \n","4    서울특별시 종로구 평창동    서울특별시 종로구   서울특별시    종로구     평창동  "],"text/html":["\n","  <div id=\"df-004fd21c-8dad-45fe-b2af-7490f88b1538\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DongCode</th>\n","      <th>PE1_Nonwork_diffOD_intraSeoul</th>\n","      <th>PE2_Nonwork_diffOD_Korea</th>\n","      <th>PE3_Nonwork_allOD_intraSeoul</th>\n","      <th>PE4_Nonwork_allOD_Korea</th>\n","      <th>PE5_Work_diffOD_intraSeoul</th>\n","      <th>PE6_Work_diffOD_Korea</th>\n","      <th>PE7_Work_allOD_intraSeoul</th>\n","      <th>PE8_Work_allOD_Korea</th>\n","      <th>SC1_Nonwork</th>\n","      <th>SC2_Work</th>\n","      <th>FULL_NM</th>\n","      <th>full_gu_name</th>\n","      <th>SIDO_NM</th>\n","      <th>SGG_NM</th>\n","      <th>ADMI_NM</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>11110515</td>\n","      <td>0.287584</td>\n","      <td>0.296431</td>\n","      <td>0.279759</td>\n","      <td>0.288310</td>\n","      <td>0.162682</td>\n","      <td>0.146748</td>\n","      <td>0.160513</td>\n","      <td>0.146517</td>\n","      <td>20.968226</td>\n","      <td>12.462606</td>\n","      <td>서울특별시 종로구 청운효자동</td>\n","      <td>서울특별시 종로구</td>\n","      <td>서울특별시</td>\n","      <td>종로구</td>\n","      <td>청운효자동</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>11110530</td>\n","      <td>0.559293</td>\n","      <td>0.546111</td>\n","      <td>0.501187</td>\n","      <td>0.499886</td>\n","      <td>0.925562</td>\n","      <td>0.897995</td>\n","      <td>0.857813</td>\n","      <td>0.849877</td>\n","      <td>14.911437</td>\n","      <td>24.390718</td>\n","      <td>서울특별시 종로구 사직동</td>\n","      <td>서울특별시 종로구</td>\n","      <td>서울특별시</td>\n","      <td>종로구</td>\n","      <td>사직동</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>11110540</td>\n","      <td>0.169136</td>\n","      <td>0.162970</td>\n","      <td>0.142422</td>\n","      <td>0.141736</td>\n","      <td>0.106723</td>\n","      <td>0.096519</td>\n","      <td>0.097452</td>\n","      <td>0.090494</td>\n","      <td>8.289952</td>\n","      <td>10.087291</td>\n","      <td>서울특별시 종로구 삼청동</td>\n","      <td>서울특별시 종로구</td>\n","      <td>서울특별시</td>\n","      <td>종로구</td>\n","      <td>삼청동</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>11110550</td>\n","      <td>0.151784</td>\n","      <td>0.148483</td>\n","      <td>0.149923</td>\n","      <td>0.147516</td>\n","      <td>0.074800</td>\n","      <td>0.065471</td>\n","      <td>0.075752</td>\n","      <td>0.066992</td>\n","      <td>20.964832</td>\n","      <td>9.778932</td>\n","      <td>서울특별시 종로구 부암동</td>\n","      <td>서울특별시 종로구</td>\n","      <td>서울특별시</td>\n","      <td>종로구</td>\n","      <td>부암동</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>11110560</td>\n","      <td>0.142028</td>\n","      <td>0.140370</td>\n","      <td>0.150192</td>\n","      <td>0.147490</td>\n","      <td>0.078464</td>\n","      <td>0.069434</td>\n","      <td>0.086648</td>\n","      <td>0.076321</td>\n","      <td>20.261651</td>\n","      <td>10.439000</td>\n","      <td>서울특별시 종로구 평창동</td>\n","      <td>서울특별시 종로구</td>\n","      <td>서울특별시</td>\n","      <td>종로구</td>\n","      <td>평창동</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-004fd21c-8dad-45fe-b2af-7490f88b1538')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-004fd21c-8dad-45fe-b2af-7490f88b1538 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-004fd21c-8dad-45fe-b2af-7490f88b1538');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-be0db40b-c649-4ce6-bbf4-653a2e74e5f5\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-be0db40b-c649-4ce6-bbf4-653a2e74e5f5')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-be0db40b-c649-4ce6-bbf4-653a2e74e5f5 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"merged_df","summary":"{\n  \"name\": \"merged_df\",\n  \"rows\": 426,\n  \"fields\": [\n    {\n      \"column\": \"DongCode\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 192077,\n        \"min\": 11110515,\n        \"max\": 11740700,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          11740610,\n          11215840,\n          11380510\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE1_Nonwork_diffOD_intraSeoul\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2083776635978471,\n        \"min\": 0.0284616494148344,\n        \"max\": 1.6221061505122858,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.4192539329805529,\n          0.3450356654564813,\n          0.2384203204786906\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE2_Nonwork_diffOD_Korea\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2192684368180186,\n        \"min\": 0.0260310989497565,\n        \"max\": 1.669602801735381,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.4148466431541437,\n          0.3198938956912089,\n          0.2255151839287061\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE3_Nonwork_allOD_intraSeoul\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2134941609152402,\n        \"min\": 0.0259272764909271,\n        \"max\": 1.675715078658569,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.4002347935786607,\n          0.3394700711639901,\n          0.2510754090310808\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE4_Nonwork_allOD_Korea\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.22189189658679323,\n        \"min\": 0.0237595273066381,\n        \"max\": 1.705944758668851,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.3997326448696905,\n          0.319727929135043,\n          0.2383983844839557\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE5_Work_diffOD_intraSeoul\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.34787663075925024,\n        \"min\": 0.0175149137290227,\n        \"max\": 3.2751882198650417,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.2697238505920379,\n          0.2161525876269936,\n          0.23508392241716\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE6_Work_diffOD_Korea\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.37704644289946926,\n        \"min\": 0.0156087101359277,\n        \"max\": 3.5787316314803594,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.2578683060724537,\n          0.199376863100176,\n          0.2096681658079328\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE7_Work_allOD_intraSeoul\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.32725883180180565,\n        \"min\": 0.0186290578327379,\n        \"max\": 3.126625926014284,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.2772796187171594,\n          0.2245104348925563,\n          0.2506979053366686\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PE8_Work_allOD_Korea\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.35924640694780824,\n        \"min\": 0.0174950594375143,\n        \"max\": 3.43368583459848,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          0.2645335935505371,\n          0.2070682600262268,\n          0.2235216879376231\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SC1_Nonwork\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.2775043842266,\n        \"min\": 2.397867661480869,\n        \"max\": 53.68455148786344,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          21.759678658329573,\n          22.04119424726494,\n          20.58580138551985\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SC2_Work\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.920892040966493,\n        \"min\": 2.5111332111322597,\n        \"max\": 45.02318769697686,\n        \"num_unique_values\": 426,\n        \"samples\": [\n          10.651925249090151,\n          11.16037129628092,\n          10.541583560674823\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FULL_NM\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 426,\n        \"samples\": [\n          \"\\uc11c\\uc6b8\\ud2b9\\ubcc4\\uc2dc \\uac15\\ub3d9\\uad6c \\ucc9c\\ud6382\\ub3d9\",\n          \"\\uc11c\\uc6b8\\ud2b9\\ubcc4\\uc2dc \\uad11\\uc9c4\\uad6c \\uc790\\uc5913\\ub3d9\",\n          \"\\uc11c\\uc6b8\\ud2b9\\ubcc4\\uc2dc \\uc740\\ud3c9\\uad6c \\ub179\\ubc88\\ub3d9\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"full_gu_name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 25,\n        \"samples\": [\n          \"\\uc11c\\uc6b8\\ud2b9\\ubcc4\\uc2dc \\uac15\\ubd81\\uad6c\",\n          \"\\uc11c\\uc6b8\\ud2b9\\ubcc4\\uc2dc \\uad6c\\ub85c\\uad6c\",\n          \"\\uc11c\\uc6b8\\ud2b9\\ubcc4\\uc2dc \\uc885\\ub85c\\uad6c\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SIDO_NM\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\uc11c\\uc6b8\\ud2b9\\ubcc4\\uc2dc\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SGG_NM\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 25,\n        \"samples\": [\n          \"\\uac15\\ubd81\\uad6c\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ADMI_NM\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 425,\n        \"samples\": [\n          \"\\ucc9c\\ud6382\\ub3d9\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["# save the table\n","merged_df.to_excel('/content/drive/MyDrive/FMC_Data/M-B_data_by_purpose_domestic_residents/Combined_Indices_by_Dong_with_DongName.xlsx', index=False)"],"metadata":{"id":"tX7P43s_K43B","executionInfo":{"status":"ok","timestamp":1748971296831,"user_tz":-480,"elapsed":74,"user":{"displayName":"JIEUN LEE","userId":"02287882068179401694"}}},"execution_count":27,"outputs":[]}]}